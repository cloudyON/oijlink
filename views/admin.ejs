<!DOCTYPE html>
<html lang="ko">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>urlsh - admin</title>
  <link rel="stylesheet" href="tailwind.css">
  <link rel="stylesheet" href="fonts.css">
  <link rel="stylesheet" href="index.css">
</head>

<body class="flex items-center justify-center flex-col">
    <div class="text-3xl font-semibold p-3">Admin<a class="btn btn-outline mr-2" href="/" type="button">Î©îÏù∏ÏúºÎ°ú</a></div>
    <table>
      <thead>
        <tr>
          <th class="px-4 py-2">ID</th>
          <th class="px-4 py-2">Target</th>
          <th class="px-4 py-2">Actions</th>
        </tr>
      </thead>
      <tbody>
        <% for (let i in id) { %>
          <tr>
            <td class="border px-4 py-2"><%= id[i] %></td>
            <td class="border px-4 py-2"><a href="<%= data[i] %>" target="_blank"><%= data[i] %></a></td>
            <td class="border px-4 py-2"><button class="linkdelete btn btn-danger mr-2">ÏÇ≠Ï†ú</button></td>
          </tr>
        <% } %>
      </tbody>
    </table>
  

  <script src="index.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/darkmode-js@1.5.6/lib/darkmode-js.min.js"></script>
<script>
  function addDarkmodeWidget() {
    const options = {
    bottom: '32px', // default: '32px'
    right: '32px', // default: '32px'
    left: 'unset', // default: 'unset'
    time: '0.3s', // default: '0.3s'
    mixColor: '#fff', // default: '#fff'
    backgroundColor: '#fff',  // default: '#fff'
    buttonColorDark: '#100f2c',  // default: '#100f2c'
    buttonColorLight: '#fff', // default: '#fff'
    saveInCookies: true, // default: true,
    label: 'üåì', // default: ''
  autoMatchOsTheme: true // default: true
  }

  const darkmode = new Darkmode(options);
  darkmode.showWidget();
  }
  window.addEventListener('load', addDarkmodeWidget);
</script>
  <script>// We can get the token from the "access_token" query
    // param, available in the browsers "location" global
    const query = window.location.search.substring(1);
    const token = query.split("access_token=")[1];

    // Call the user info API using the fetch browser library
    fetch("//api.github.com/user", {
      headers: {
        // Include the token in the Authorization header
        Authorization: "token " + token
      }
    })
      // Parse the response as JSON
      .then(res => res.json())
      .then(res => {
        // Once we get the response (which has many fields)
        // Documented here: https://developer.github.com/v3/users/#get-the-authenticated-user
        // Write "Welcome <user name>" to the documents body
        if (res.name != "injoon" && res.name != "codingCup04" && res.name != 'Î∞ïÎØºÏö∞') {
          window.location.href = 'https://github.com/login/oauth/authorize?client_id=7cfc702671649f90e0a3&redirect_url=https://urlsh.kro.kr/oauth/redirect'
        }

      });</script>
</body>

</html>
